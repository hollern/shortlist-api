// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Shortlist.Api.Data;
using System;

namespace Shortlist.Api.Migrations
{
    [DbContext(typeof(OrganizationContext))]
    partial class OrganizationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Shortlist.Api.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Shortlist.Api.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateJoined");

                    b.Property<DateTime>("DateLeft");

                    b.Property<int?>("EmployeeRoleRoleId");

                    b.Property<int?>("RelatedPersonPersonId");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeRoleRoleId");

                    b.HasIndex("RelatedPersonPersonId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Shortlist.Api.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalDetails");

                    b.Property<string>("Address");

                    b.Property<DateTime>("BDate");

                    b.Property<string>("Email");

                    b.Property<string>("FName");

                    b.Property<string>("Gender");

                    b.Property<string>("LName");

                    b.Property<string>("MidIn");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("RelatedCompanyCompanyId");

                    b.Property<string>("Ssn");

                    b.HasKey("PersonId");

                    b.HasIndex("RelatedCompanyCompanyId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Shortlist.Api.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleName");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Shortlist.Api.Models.Employee", b =>
                {
                    b.HasOne("Shortlist.Api.Models.Role", "EmployeeRole")
                        .WithMany()
                        .HasForeignKey("EmployeeRoleRoleId");

                    b.HasOne("Shortlist.Api.Models.Person", "RelatedPerson")
                        .WithMany()
                        .HasForeignKey("RelatedPersonPersonId");
                });

            modelBuilder.Entity("Shortlist.Api.Models.Person", b =>
                {
                    b.HasOne("Shortlist.Api.Models.Company", "RelatedCompany")
                        .WithMany()
                        .HasForeignKey("RelatedCompanyCompanyId");
                });
#pragma warning restore 612, 618
        }
    }
}
